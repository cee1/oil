<refentry id="oil-regimpls">

<refmeta>
<refentrytitle>oil-regimpls</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>

<refnamediv>
<refname>oil-regimpls</refname>
<refpurpose>Auto generate implements register code</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>oil-regimpls</command>
<arg choice="opt" rep="repeat">option</arg>
<arg>implements_register_file</arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1><title>Description</title>
<para><command>oil-regimpls</command> is a utility to generate implement registering code</para>
<para>
<command>oil-regimpls</command> will generate a file named "&lt;implements_register_file&gt;_register_implements.c", which contains only one function -- "&lt;implements_register_file&gt;_register_implements ()"
</para>
<para>Here is an example of implements register file:</para>
<example>
<title>foo.reg</title>
<programlisting>
# include
[include]
i368/i386.reg

# [ flags ]
# function_class.implement = implement_function
[OIL_FLAG (OIL_FLAGBIT_i386_MMX)]
oil_copy8x8_u8.mmx = oil_copy8x8_u8_mmx</programlisting></example>
<refsect2><title>Options</title>
<variablelist>

<varlistentry>
<term><option>-h</option>, <option>--help</option></term>
<listitem><para>
print help and exit
</para></listitem>
</varlistentry>

<varlistentry>
<term><option>-f</option>, <option>--force</option></term>
<listitem><para>
force overwrite exists files
</para></listitem>
</varlistentry>

</variablelist>
</refsect2>
</refsect1>
</refentry>
